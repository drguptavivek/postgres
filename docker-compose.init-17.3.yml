services:
  pgdb:
    image: postgres:17.3
    container_name: pgdb
    restart: always
    shm_size: 128mb
    ports:
      - "127.0.0.1:5432:5432"     # local-only exposure
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
      POSTGRES_PASSWORD_FILE: /run/secrets/POSTGRES_PASSWORD
      # Do NOT put POSTGRES_PASSWORD in .env when using secrets
    secrets:
      - POSTGRES_PASSWORD
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U \"$${POSTGRES_USER:-postgres}\" -d \"$${POSTGRES_DB:-postgres}\""]
      interval: 5s
      timeout: 5s
      retries: 20
    networks:
      - pgnet

  adminer:
    image: adminer:latest
    container_name: adminer
    restart: always
    ports:
      - "127.0.0.1:8080:8080"
    depends_on:
      pgdb:
        condition: service_healthy
    networks:
      - pgnet

  pgadmin:
    image: dpage/pgadmin4:9.9.0
    container_name: pgadmin
    restart: always
    # environment:
    #  PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-change-me-immediately@example.com}
    #  PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    secrets:
      - PGADMIN_DEFAULT_EMAIL
      - PGADMIN_DEFAULT_PASSWORD
    entrypoint: 
      ["/bin/sh","-c",
      "export PGADMIN_DEFAULT_EMAIL=$(cat /run/secrets/PGADMIN_DEFAULT_EMAIL); 
       export PGADMIN_DEFAULT_PASSWORD=$(cat /run/secrets/PGADMIN_DEFAULT_PASSWORD); 
      exec /entrypoint.sh"]
    volumes:
      - pgadmindata:/var/lib/pgadmin  
    ports:
      - "127.0.0.1:16543:80"
    depends_on:
      pgdb:
        condition: service_healthy
    networks:
      - pgnet

volumes:
  pgdata:
  pgadmindata:
  
networks:
  pgnet:
    driver: bridge
    name: pgnet

secrets:
  POSTGRES_PASSWORD:
    file: ./secrets/POSTGRES_PASSWORD
  PGADMIN_DEFAULT_PASSWORD:
    file: ./secrets/PGADMIN_DEFAULT_PASSWORD
  PGADMIN_DEFAULT_EMAIL:
    file: ./secrets/PGADMIN_DEFAULT_EMAIL